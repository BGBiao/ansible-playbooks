---
- hosts: "{{ host }}"
  remote_user: root
  vars:
    hostip: "{{ ansible_default_ipv4.address }}"
    node_name: "{{ ansible_hostname }}"
    ipv6: "{{ ansible_all_ipv6_addresses[0].split(':')[-1] }}"
    heap_mem: "8"
    jmx_port: "9999"
  vars_files:
    - vars/varsfile.yml

  tasks:
  - name: "test ping"
    ping:

  - name: "init the dir"
    file:
      path: "{{ item.dir }}"
      state: directory
      mode: '0775'
    with_items:
      - { dir: "{{ appdir }}" }
      - { dir: "{{ datadir }}" }
      - { dir: "{{ pkgdir }}" }
      - { dir: "{{ serverdir }}" }


  - name: "download the {{ app }} packages"
    get_url:
      url: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: "{{ download_url }}{{ app_pkg }}.tgz", dest: "{{ pkgdir }}{{ app_pkg }}.tar.gz" }

  - name: "untar the {{ app }}"
    unarchive:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      # 如果解压本地文件必须设置从本地控制器进行解压
      remote_src: yes
    with_items:
      - { src: "{{ pkgdir }}{{ app_pkg }}.tar.gz", dest: "{{ serverdir }}" }

  - name: "copy the docker to PATH"
    shell: "cp -rp /opt/servers/docker/* /usr/local/sbin/ && mkdir -p {{ dockerdir }} {{ dockertmp }}"
    tags: docker

  - name: "init the configures"
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: 0755
    with_items:
      - { src: "templates/docker.service.j2", dest: "/usr/lib/systemd/system/docker.service" }
      - { src: "templates/daemon.json", dest: "/etc/docker/daemon.json" }
      - { src: "templates/key.json", dest: "/etc/docker/key.json" }
      - { src: "templates/config.json", dest: "/root/.docker/config.json" }
    tags: docker

  - name: "start the docker"
    shell: "systemctl daemon-reload && systemctl restart docker && systemctl enable docker"
    tags: docker
